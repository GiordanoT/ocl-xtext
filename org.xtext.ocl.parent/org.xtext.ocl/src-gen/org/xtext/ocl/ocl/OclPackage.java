/**
 * generated by Xtext 2.26.0-SNAPSHOT
 */
package org.xtext.ocl.ocl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.ocl.ocl.OclFactory
 * @model kind="package"
 * @generated
 */
public interface OclPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "ocl";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/ocl/Ocl";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "ocl";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  OclPackage eINSTANCE = org.xtext.ocl.ocl.impl.OclPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.StartImpl <em>Start</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.StartImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getStart()
   * @generated
   */
  int START = 0;

  /**
   * The number of structural features of the '<em>Start</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int START_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.ContextExpressionImpl <em>Context Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.ContextExpressionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getContextExpression()
   * @generated
   */
  int CONTEXT_EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Context Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTEXT_EXPRESSION_FEATURE_COUNT = START_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.ExpressionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 2;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__OP = START_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Features</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__FEATURES = START_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = START_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.LogicalExpressionImpl <em>Logical Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.LogicalExpressionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getLogicalExpression()
   * @generated
   */
  int LOGICAL_EXPRESSION = 3;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Features</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__FEATURES = EXPRESSION__FEATURES;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION__EXP = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Logical Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.RelationalExpressionImpl <em>Relational Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.RelationalExpressionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getRelationalExpression()
   * @generated
   */
  int RELATIONAL_EXPRESSION = 4;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONAL_EXPRESSION__EXP = 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONAL_EXPRESSION__OP = 1;

  /**
   * The number of structural features of the '<em>Relational Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONAL_EXPRESSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.AdditiveExpressionImpl <em>Additive Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.AdditiveExpressionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getAdditiveExpression()
   * @generated
   */
  int ADDITIVE_EXPRESSION = 5;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITIVE_EXPRESSION__EXP = 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITIVE_EXPRESSION__OP = 1;

  /**
   * The number of structural features of the '<em>Additive Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITIVE_EXPRESSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.MultiplicativeExpressionImpl <em>Multiplicative Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.MultiplicativeExpressionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getMultiplicativeExpression()
   * @generated
   */
  int MULTIPLICATIVE_EXPRESSION = 6;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATIVE_EXPRESSION__EXP = 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATIVE_EXPRESSION__OP = 1;

  /**
   * The number of structural features of the '<em>Multiplicative Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATIVE_EXPRESSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.UnaryExpressionImpl <em>Unary Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.UnaryExpressionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getUnaryExpression()
   * @generated
   */
  int UNARY_EXPRESSION = 7;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__OP = 0;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__EXP = 1;

  /**
   * The number of structural features of the '<em>Unary Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.PostfixExpressionImpl <em>Postfix Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.PostfixExpressionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getPostfixExpression()
   * @generated
   */
  int POSTFIX_EXPRESSION = 8;

  /**
   * The number of structural features of the '<em>Postfix Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POSTFIX_EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.PrimaryExpressionImpl <em>Primary Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.PrimaryExpressionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getPrimaryExpression()
   * @generated
   */
  int PRIMARY_EXPRESSION = 9;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_EXPRESSION__OP = POSTFIX_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Features</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_EXPRESSION__FEATURES = POSTFIX_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Primary Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_EXPRESSION_FEATURE_COUNT = POSTFIX_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.IfExpressionImpl <em>If Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.IfExpressionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getIfExpression()
   * @generated
   */
  int IF_EXPRESSION = 10;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXPRESSION__OP = PRIMARY_EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Features</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXPRESSION__FEATURES = PRIMARY_EXPRESSION__FEATURES;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXPRESSION__EXP = PRIMARY_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>If Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXPRESSION_FEATURE_COUNT = PRIMARY_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.FeatureCallParametersImpl <em>Feature Call Parameters</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.FeatureCallParametersImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getFeatureCallParameters()
   * @generated
   */
  int FEATURE_CALL_PARAMETERS = 11;

  /**
   * The feature id for the '<em><b>Decs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FEATURE_CALL_PARAMETERS__DECS = 0;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FEATURE_CALL_PARAMETERS__PARAMS = 1;

  /**
   * The number of structural features of the '<em>Feature Call Parameters</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FEATURE_CALL_PARAMETERS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.LiteralImpl <em>Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.LiteralImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getLiteral()
   * @generated
   */
  int LITERAL = 12;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__OP = PRIMARY_EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Features</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__FEATURES = PRIMARY_EXPRESSION__FEATURES;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__NAME = PRIMARY_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_FEATURE_COUNT = PRIMARY_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.SimpleTypeSpecifierImpl <em>Simple Type Specifier</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.SimpleTypeSpecifierImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getSimpleTypeSpecifier()
   * @generated
   */
  int SIMPLE_TYPE_SPECIFIER = 14;

  /**
   * The number of structural features of the '<em>Simple Type Specifier</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_TYPE_SPECIFIER_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.EnumerationTypeImpl <em>Enumeration Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.EnumerationTypeImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getEnumerationType()
   * @generated
   */
  int ENUMERATION_TYPE = 13;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUMERATION_TYPE__LEFT = SIMPLE_TYPE_SPECIFIER_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Rights</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUMERATION_TYPE__RIGHTS = SIMPLE_TYPE_SPECIFIER_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Enumeration Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUMERATION_TYPE_FEATURE_COUNT = SIMPLE_TYPE_SPECIFIER_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.LiteralCollectionImpl <em>Literal Collection</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.LiteralCollectionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getLiteralCollection()
   * @generated
   */
  int LITERAL_COLLECTION = 15;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_COLLECTION__OP = PRIMARY_EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Features</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_COLLECTION__FEATURES = PRIMARY_EXPRESSION__FEATURES;

  /**
   * The feature id for the '<em><b>Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_COLLECTION__NAME = PRIMARY_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_COLLECTION__EXP = PRIMARY_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Literal Collection</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_COLLECTION_FEATURE_COUNT = PRIMARY_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.ExpressionListOrRangeImpl <em>Expression List Or Range</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.ExpressionListOrRangeImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getExpressionListOrRange()
   * @generated
   */
  int EXPRESSION_LIST_OR_RANGE = 16;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LIST_OR_RANGE__EXP = 0;

  /**
   * The number of structural features of the '<em>Expression List Or Range</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LIST_OR_RANGE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.FeatureCallImpl <em>Feature Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.FeatureCallImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getFeatureCall()
   * @generated
   */
  int FEATURE_CALL = 17;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FEATURE_CALL__OP = PRIMARY_EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Features</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FEATURE_CALL__FEATURES = PRIMARY_EXPRESSION__FEATURES;

  /**
   * The number of structural features of the '<em>Feature Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FEATURE_CALL_FEATURE_COUNT = PRIMARY_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.QualifiersImpl <em>Qualifiers</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.QualifiersImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getQualifiers()
   * @generated
   */
  int QUALIFIERS = 18;

  /**
   * The number of structural features of the '<em>Qualifiers</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIERS_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.DeclaratorImpl <em>Declarator</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.DeclaratorImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getDeclarator()
   * @generated
   */
  int DECLARATOR = 19;

  /**
   * The feature id for the '<em><b>Name</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATOR__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATOR__TYPE = 1;

  /**
   * The number of structural features of the '<em>Declarator</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATOR_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.PathTypeNameImpl <em>Path Type Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.PathTypeNameImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getPathTypeName()
   * @generated
   */
  int PATH_TYPE_NAME = 20;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATH_TYPE_NAME__LEFT = SIMPLE_TYPE_SPECIFIER_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Rights</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATH_TYPE_NAME__RIGHTS = SIMPLE_TYPE_SPECIFIER_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Path Type Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATH_TYPE_NAME_FEATURE_COUNT = SIMPLE_TYPE_SPECIFIER_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.PathNameImpl <em>Path Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.PathNameImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getPathName()
   * @generated
   */
  int PATH_NAME = 21;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATH_NAME__OP = FEATURE_CALL__OP;

  /**
   * The feature id for the '<em><b>Features</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATH_NAME__FEATURES = FEATURE_CALL__FEATURES;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATH_NAME__PARAMS = FEATURE_CALL_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATH_NAME__LEFT = FEATURE_CALL_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Rights</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATH_NAME__RIGHTS = FEATURE_CALL_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Path Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATH_NAME_FEATURE_COUNT = FEATURE_CALL_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.TimeExpressionImpl <em>Time Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.TimeExpressionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getTimeExpression()
   * @generated
   */
  int TIME_EXPRESSION = 22;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIME_EXPRESSION__NAME = 0;

  /**
   * The number of structural features of the '<em>Time Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIME_EXPRESSION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.ActualParameterListImpl <em>Actual Parameter List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.ActualParameterListImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getActualParameterList()
   * @generated
   */
  int ACTUAL_PARAMETER_LIST = 23;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_PARAMETER_LIST__EXP = QUALIFIERS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Actual Parameter List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_PARAMETER_LIST_FEATURE_COUNT = QUALIFIERS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.TypeNameImpl <em>Type Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.TypeNameImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getTypeName()
   * @generated
   */
  int TYPE_NAME = 24;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Type Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.NameImpl <em>Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.NameImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getName_()
   * @generated
   */
  int NAME = 25;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.AttributeImpl <em>Attribute</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.AttributeImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getAttribute()
   * @generated
   */
  int ATTRIBUTE = 26;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE__NAME = NAME__NAME;

  /**
   * The number of structural features of the '<em>Attribute</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_FEATURE_COUNT = NAME_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.FunctionImpl <em>Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.FunctionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getFunction()
   * @generated
   */
  int FUNCTION = 27;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION__NAME = NAME__NAME;

  /**
   * The number of structural features of the '<em>Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_FEATURE_COUNT = NAME_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.NoParamFunctionImpl <em>No Param Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.NoParamFunctionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getNoParamFunction()
   * @generated
   */
  int NO_PARAM_FUNCTION = 28;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NO_PARAM_FUNCTION__NAME = FUNCTION__NAME;

  /**
   * The number of structural features of the '<em>No Param Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NO_PARAM_FUNCTION_FEATURE_COUNT = FUNCTION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.OneTypeParamFunctionImpl <em>One Type Param Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.OneTypeParamFunctionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getOneTypeParamFunction()
   * @generated
   */
  int ONE_TYPE_PARAM_FUNCTION = 29;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ONE_TYPE_PARAM_FUNCTION__NAME = FUNCTION__NAME;

  /**
   * The number of structural features of the '<em>One Type Param Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ONE_TYPE_PARAM_FUNCTION_FEATURE_COUNT = FUNCTION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.OneStringParamFunctionImpl <em>One String Param Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.OneStringParamFunctionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getOneStringParamFunction()
   * @generated
   */
  int ONE_STRING_PARAM_FUNCTION = 30;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ONE_STRING_PARAM_FUNCTION__NAME = FUNCTION__NAME;

  /**
   * The number of structural features of the '<em>One String Param Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ONE_STRING_PARAM_FUNCTION_FEATURE_COUNT = FUNCTION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.TwoStringParamFunctionImpl <em>Two String Param Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.TwoStringParamFunctionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getTwoStringParamFunction()
   * @generated
   */
  int TWO_STRING_PARAM_FUNCTION = 31;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TWO_STRING_PARAM_FUNCTION__NAME = FUNCTION__NAME;

  /**
   * The number of structural features of the '<em>Two String Param Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TWO_STRING_PARAM_FUNCTION_FEATURE_COUNT = FUNCTION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.OneIntegerParamFunctionImpl <em>One Integer Param Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.OneIntegerParamFunctionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getOneIntegerParamFunction()
   * @generated
   */
  int ONE_INTEGER_PARAM_FUNCTION = 32;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ONE_INTEGER_PARAM_FUNCTION__NAME = FUNCTION__NAME;

  /**
   * The number of structural features of the '<em>One Integer Param Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ONE_INTEGER_PARAM_FUNCTION_FEATURE_COUNT = FUNCTION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.TwoIntegerParamFunctionImpl <em>Two Integer Param Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.TwoIntegerParamFunctionImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getTwoIntegerParamFunction()
   * @generated
   */
  int TWO_INTEGER_PARAM_FUNCTION = 33;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TWO_INTEGER_PARAM_FUNCTION__NAME = FUNCTION__NAME;

  /**
   * The number of structural features of the '<em>Two Integer Param Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TWO_INTEGER_PARAM_FUNCTION_FEATURE_COUNT = FUNCTION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.CollectionKindImpl <em>Collection Kind</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.CollectionKindImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getCollectionKind()
   * @generated
   */
  int COLLECTION_KIND = 34;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_KIND__NAME = 0;

  /**
   * The number of structural features of the '<em>Collection Kind</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_KIND_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.NavigationOperatorImpl <em>Navigation Operator</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.NavigationOperatorImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getNavigationOperator()
   * @generated
   */
  int NAVIGATION_OPERATOR = 35;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_OPERATOR__NAME = 0;

  /**
   * The number of structural features of the '<em>Navigation Operator</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_OPERATOR_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.UnaryOperatorImpl <em>Unary Operator</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.UnaryOperatorImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getUnaryOperator()
   * @generated
   */
  int UNARY_OPERATOR = 36;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_OPERATOR__NAME = 0;

  /**
   * The number of structural features of the '<em>Unary Operator</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_OPERATOR_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.MultiplyOperatorImpl <em>Multiply Operator</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.MultiplyOperatorImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getMultiplyOperator()
   * @generated
   */
  int MULTIPLY_OPERATOR = 37;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_OPERATOR__NAME = 0;

  /**
   * The number of structural features of the '<em>Multiply Operator</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_OPERATOR_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.AddOperatorImpl <em>Add Operator</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.AddOperatorImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getAddOperator()
   * @generated
   */
  int ADD_OPERATOR = 38;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OPERATOR__NAME = 0;

  /**
   * The number of structural features of the '<em>Add Operator</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OPERATOR_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.RelationalOperatorImpl <em>Relational Operator</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.RelationalOperatorImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getRelationalOperator()
   * @generated
   */
  int RELATIONAL_OPERATOR = 39;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONAL_OPERATOR__NAME = 0;

  /**
   * The number of structural features of the '<em>Relational Operator</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONAL_OPERATOR_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.ocl.ocl.impl.LogicalOperatorImpl <em>Logical Operator</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.ocl.ocl.impl.LogicalOperatorImpl
   * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getLogicalOperator()
   * @generated
   */
  int LOGICAL_OPERATOR = 40;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_OPERATOR__NAME = 0;

  /**
   * The number of structural features of the '<em>Logical Operator</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_OPERATOR_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.Start <em>Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Start</em>'.
   * @see org.xtext.ocl.ocl.Start
   * @generated
   */
  EClass getStart();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.ContextExpression <em>Context Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Context Expression</em>'.
   * @see org.xtext.ocl.ocl.ContextExpression
   * @generated
   */
  EClass getContextExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.xtext.ocl.ocl.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.LogicalExpression <em>Logical Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Logical Expression</em>'.
   * @see org.xtext.ocl.ocl.LogicalExpression
   * @generated
   */
  EClass getLogicalExpression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.LogicalExpression#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exp</em>'.
   * @see org.xtext.ocl.ocl.LogicalExpression#getExp()
   * @see #getLogicalExpression()
   * @generated
   */
  EReference getLogicalExpression_Exp();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.RelationalExpression <em>Relational Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Relational Expression</em>'.
   * @see org.xtext.ocl.ocl.RelationalExpression
   * @generated
   */
  EClass getRelationalExpression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.RelationalExpression#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exp</em>'.
   * @see org.xtext.ocl.ocl.RelationalExpression#getExp()
   * @see #getRelationalExpression()
   * @generated
   */
  EReference getRelationalExpression_Exp();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.RelationalExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Op</em>'.
   * @see org.xtext.ocl.ocl.RelationalExpression#getOp()
   * @see #getRelationalExpression()
   * @generated
   */
  EReference getRelationalExpression_Op();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.AdditiveExpression <em>Additive Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Additive Expression</em>'.
   * @see org.xtext.ocl.ocl.AdditiveExpression
   * @generated
   */
  EClass getAdditiveExpression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.AdditiveExpression#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exp</em>'.
   * @see org.xtext.ocl.ocl.AdditiveExpression#getExp()
   * @see #getAdditiveExpression()
   * @generated
   */
  EReference getAdditiveExpression_Exp();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.AdditiveExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Op</em>'.
   * @see org.xtext.ocl.ocl.AdditiveExpression#getOp()
   * @see #getAdditiveExpression()
   * @generated
   */
  EReference getAdditiveExpression_Op();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.MultiplicativeExpression <em>Multiplicative Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiplicative Expression</em>'.
   * @see org.xtext.ocl.ocl.MultiplicativeExpression
   * @generated
   */
  EClass getMultiplicativeExpression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.MultiplicativeExpression#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exp</em>'.
   * @see org.xtext.ocl.ocl.MultiplicativeExpression#getExp()
   * @see #getMultiplicativeExpression()
   * @generated
   */
  EReference getMultiplicativeExpression_Exp();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.MultiplicativeExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Op</em>'.
   * @see org.xtext.ocl.ocl.MultiplicativeExpression#getOp()
   * @see #getMultiplicativeExpression()
   * @generated
   */
  EReference getMultiplicativeExpression_Op();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.UnaryExpression <em>Unary Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unary Expression</em>'.
   * @see org.xtext.ocl.ocl.UnaryExpression
   * @generated
   */
  EClass getUnaryExpression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.UnaryExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Op</em>'.
   * @see org.xtext.ocl.ocl.UnaryExpression#getOp()
   * @see #getUnaryExpression()
   * @generated
   */
  EReference getUnaryExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.ocl.ocl.UnaryExpression#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see org.xtext.ocl.ocl.UnaryExpression#getExp()
   * @see #getUnaryExpression()
   * @generated
   */
  EReference getUnaryExpression_Exp();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.PostfixExpression <em>Postfix Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Postfix Expression</em>'.
   * @see org.xtext.ocl.ocl.PostfixExpression
   * @generated
   */
  EClass getPostfixExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.PrimaryExpression <em>Primary Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primary Expression</em>'.
   * @see org.xtext.ocl.ocl.PrimaryExpression
   * @generated
   */
  EClass getPrimaryExpression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.PrimaryExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Op</em>'.
   * @see org.xtext.ocl.ocl.PrimaryExpression#getOp()
   * @see #getPrimaryExpression()
   * @generated
   */
  EReference getPrimaryExpression_Op();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.PrimaryExpression#getFeatures <em>Features</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Features</em>'.
   * @see org.xtext.ocl.ocl.PrimaryExpression#getFeatures()
   * @see #getPrimaryExpression()
   * @generated
   */
  EReference getPrimaryExpression_Features();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.IfExpression <em>If Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If Expression</em>'.
   * @see org.xtext.ocl.ocl.IfExpression
   * @generated
   */
  EClass getIfExpression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.IfExpression#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exp</em>'.
   * @see org.xtext.ocl.ocl.IfExpression#getExp()
   * @see #getIfExpression()
   * @generated
   */
  EReference getIfExpression_Exp();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.FeatureCallParameters <em>Feature Call Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Feature Call Parameters</em>'.
   * @see org.xtext.ocl.ocl.FeatureCallParameters
   * @generated
   */
  EClass getFeatureCallParameters();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.ocl.ocl.FeatureCallParameters#getDecs <em>Decs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Decs</em>'.
   * @see org.xtext.ocl.ocl.FeatureCallParameters#getDecs()
   * @see #getFeatureCallParameters()
   * @generated
   */
  EReference getFeatureCallParameters_Decs();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.ocl.ocl.FeatureCallParameters#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Params</em>'.
   * @see org.xtext.ocl.ocl.FeatureCallParameters#getParams()
   * @see #getFeatureCallParameters()
   * @generated
   */
  EReference getFeatureCallParameters_Params();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.Literal <em>Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Literal</em>'.
   * @see org.xtext.ocl.ocl.Literal
   * @generated
   */
  EClass getLiteral();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.ocl.ocl.Literal#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.ocl.ocl.Literal#getName()
   * @see #getLiteral()
   * @generated
   */
  EAttribute getLiteral_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.EnumerationType <em>Enumeration Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Enumeration Type</em>'.
   * @see org.xtext.ocl.ocl.EnumerationType
   * @generated
   */
  EClass getEnumerationType();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.ocl.ocl.EnumerationType#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.ocl.ocl.EnumerationType#getLeft()
   * @see #getEnumerationType()
   * @generated
   */
  EReference getEnumerationType_Left();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.EnumerationType#getRights <em>Rights</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rights</em>'.
   * @see org.xtext.ocl.ocl.EnumerationType#getRights()
   * @see #getEnumerationType()
   * @generated
   */
  EReference getEnumerationType_Rights();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.SimpleTypeSpecifier <em>Simple Type Specifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Type Specifier</em>'.
   * @see org.xtext.ocl.ocl.SimpleTypeSpecifier
   * @generated
   */
  EClass getSimpleTypeSpecifier();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.LiteralCollection <em>Literal Collection</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Literal Collection</em>'.
   * @see org.xtext.ocl.ocl.LiteralCollection
   * @generated
   */
  EClass getLiteralCollection();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.ocl.ocl.LiteralCollection#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Name</em>'.
   * @see org.xtext.ocl.ocl.LiteralCollection#getName()
   * @see #getLiteralCollection()
   * @generated
   */
  EReference getLiteralCollection_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.ocl.ocl.LiteralCollection#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see org.xtext.ocl.ocl.LiteralCollection#getExp()
   * @see #getLiteralCollection()
   * @generated
   */
  EReference getLiteralCollection_Exp();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.ExpressionListOrRange <em>Expression List Or Range</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression List Or Range</em>'.
   * @see org.xtext.ocl.ocl.ExpressionListOrRange
   * @generated
   */
  EClass getExpressionListOrRange();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.ExpressionListOrRange#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exp</em>'.
   * @see org.xtext.ocl.ocl.ExpressionListOrRange#getExp()
   * @see #getExpressionListOrRange()
   * @generated
   */
  EReference getExpressionListOrRange_Exp();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.FeatureCall <em>Feature Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Feature Call</em>'.
   * @see org.xtext.ocl.ocl.FeatureCall
   * @generated
   */
  EClass getFeatureCall();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.Qualifiers <em>Qualifiers</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Qualifiers</em>'.
   * @see org.xtext.ocl.ocl.Qualifiers
   * @generated
   */
  EClass getQualifiers();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.Declarator <em>Declarator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Declarator</em>'.
   * @see org.xtext.ocl.ocl.Declarator
   * @generated
   */
  EClass getDeclarator();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.Declarator#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Name</em>'.
   * @see org.xtext.ocl.ocl.Declarator#getName()
   * @see #getDeclarator()
   * @generated
   */
  EReference getDeclarator_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.ocl.ocl.Declarator#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.ocl.ocl.Declarator#getType()
   * @see #getDeclarator()
   * @generated
   */
  EReference getDeclarator_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.PathTypeName <em>Path Type Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Path Type Name</em>'.
   * @see org.xtext.ocl.ocl.PathTypeName
   * @generated
   */
  EClass getPathTypeName();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.ocl.ocl.PathTypeName#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.ocl.ocl.PathTypeName#getLeft()
   * @see #getPathTypeName()
   * @generated
   */
  EReference getPathTypeName_Left();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.PathTypeName#getRights <em>Rights</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rights</em>'.
   * @see org.xtext.ocl.ocl.PathTypeName#getRights()
   * @see #getPathTypeName()
   * @generated
   */
  EReference getPathTypeName_Rights();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.PathName <em>Path Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Path Name</em>'.
   * @see org.xtext.ocl.ocl.PathName
   * @generated
   */
  EClass getPathName();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.PathName#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Params</em>'.
   * @see org.xtext.ocl.ocl.PathName#getParams()
   * @see #getPathName()
   * @generated
   */
  EReference getPathName_Params();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.ocl.ocl.PathName#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.ocl.ocl.PathName#getLeft()
   * @see #getPathName()
   * @generated
   */
  EReference getPathName_Left();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.PathName#getRights <em>Rights</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rights</em>'.
   * @see org.xtext.ocl.ocl.PathName#getRights()
   * @see #getPathName()
   * @generated
   */
  EReference getPathName_Rights();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.TimeExpression <em>Time Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Time Expression</em>'.
   * @see org.xtext.ocl.ocl.TimeExpression
   * @generated
   */
  EClass getTimeExpression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.ocl.ocl.TimeExpression#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.ocl.ocl.TimeExpression#getName()
   * @see #getTimeExpression()
   * @generated
   */
  EAttribute getTimeExpression_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.ActualParameterList <em>Actual Parameter List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Actual Parameter List</em>'.
   * @see org.xtext.ocl.ocl.ActualParameterList
   * @generated
   */
  EClass getActualParameterList();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.ocl.ocl.ActualParameterList#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exp</em>'.
   * @see org.xtext.ocl.ocl.ActualParameterList#getExp()
   * @see #getActualParameterList()
   * @generated
   */
  EReference getActualParameterList_Exp();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.TypeName <em>Type Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type Name</em>'.
   * @see org.xtext.ocl.ocl.TypeName
   * @generated
   */
  EClass getTypeName();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.ocl.ocl.TypeName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.ocl.ocl.TypeName#getName()
   * @see #getTypeName()
   * @generated
   */
  EAttribute getTypeName_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.Name <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Name</em>'.
   * @see org.xtext.ocl.ocl.Name
   * @generated
   */
  EClass getName_();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.ocl.ocl.Name#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.ocl.ocl.Name#getName()
   * @see #getName_()
   * @generated
   */
  EAttribute getName_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.Attribute <em>Attribute</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Attribute</em>'.
   * @see org.xtext.ocl.ocl.Attribute
   * @generated
   */
  EClass getAttribute();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.Function <em>Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function</em>'.
   * @see org.xtext.ocl.ocl.Function
   * @generated
   */
  EClass getFunction();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.NoParamFunction <em>No Param Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>No Param Function</em>'.
   * @see org.xtext.ocl.ocl.NoParamFunction
   * @generated
   */
  EClass getNoParamFunction();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.OneTypeParamFunction <em>One Type Param Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>One Type Param Function</em>'.
   * @see org.xtext.ocl.ocl.OneTypeParamFunction
   * @generated
   */
  EClass getOneTypeParamFunction();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.OneStringParamFunction <em>One String Param Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>One String Param Function</em>'.
   * @see org.xtext.ocl.ocl.OneStringParamFunction
   * @generated
   */
  EClass getOneStringParamFunction();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.TwoStringParamFunction <em>Two String Param Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Two String Param Function</em>'.
   * @see org.xtext.ocl.ocl.TwoStringParamFunction
   * @generated
   */
  EClass getTwoStringParamFunction();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.OneIntegerParamFunction <em>One Integer Param Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>One Integer Param Function</em>'.
   * @see org.xtext.ocl.ocl.OneIntegerParamFunction
   * @generated
   */
  EClass getOneIntegerParamFunction();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.TwoIntegerParamFunction <em>Two Integer Param Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Two Integer Param Function</em>'.
   * @see org.xtext.ocl.ocl.TwoIntegerParamFunction
   * @generated
   */
  EClass getTwoIntegerParamFunction();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.CollectionKind <em>Collection Kind</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Collection Kind</em>'.
   * @see org.xtext.ocl.ocl.CollectionKind
   * @generated
   */
  EClass getCollectionKind();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.ocl.ocl.CollectionKind#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.ocl.ocl.CollectionKind#getName()
   * @see #getCollectionKind()
   * @generated
   */
  EAttribute getCollectionKind_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.NavigationOperator <em>Navigation Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Navigation Operator</em>'.
   * @see org.xtext.ocl.ocl.NavigationOperator
   * @generated
   */
  EClass getNavigationOperator();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.ocl.ocl.NavigationOperator#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.ocl.ocl.NavigationOperator#getName()
   * @see #getNavigationOperator()
   * @generated
   */
  EAttribute getNavigationOperator_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.UnaryOperator <em>Unary Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unary Operator</em>'.
   * @see org.xtext.ocl.ocl.UnaryOperator
   * @generated
   */
  EClass getUnaryOperator();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.ocl.ocl.UnaryOperator#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.ocl.ocl.UnaryOperator#getName()
   * @see #getUnaryOperator()
   * @generated
   */
  EAttribute getUnaryOperator_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.MultiplyOperator <em>Multiply Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiply Operator</em>'.
   * @see org.xtext.ocl.ocl.MultiplyOperator
   * @generated
   */
  EClass getMultiplyOperator();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.ocl.ocl.MultiplyOperator#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.ocl.ocl.MultiplyOperator#getName()
   * @see #getMultiplyOperator()
   * @generated
   */
  EAttribute getMultiplyOperator_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.AddOperator <em>Add Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Add Operator</em>'.
   * @see org.xtext.ocl.ocl.AddOperator
   * @generated
   */
  EClass getAddOperator();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.ocl.ocl.AddOperator#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.ocl.ocl.AddOperator#getName()
   * @see #getAddOperator()
   * @generated
   */
  EAttribute getAddOperator_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.RelationalOperator <em>Relational Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Relational Operator</em>'.
   * @see org.xtext.ocl.ocl.RelationalOperator
   * @generated
   */
  EClass getRelationalOperator();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.ocl.ocl.RelationalOperator#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.ocl.ocl.RelationalOperator#getName()
   * @see #getRelationalOperator()
   * @generated
   */
  EAttribute getRelationalOperator_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.ocl.ocl.LogicalOperator <em>Logical Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Logical Operator</em>'.
   * @see org.xtext.ocl.ocl.LogicalOperator
   * @generated
   */
  EClass getLogicalOperator();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.ocl.ocl.LogicalOperator#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.ocl.ocl.LogicalOperator#getName()
   * @see #getLogicalOperator()
   * @generated
   */
  EAttribute getLogicalOperator_Name();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  OclFactory getOclFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.StartImpl <em>Start</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.StartImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getStart()
     * @generated
     */
    EClass START = eINSTANCE.getStart();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.ContextExpressionImpl <em>Context Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.ContextExpressionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getContextExpression()
     * @generated
     */
    EClass CONTEXT_EXPRESSION = eINSTANCE.getContextExpression();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.ExpressionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.LogicalExpressionImpl <em>Logical Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.LogicalExpressionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getLogicalExpression()
     * @generated
     */
    EClass LOGICAL_EXPRESSION = eINSTANCE.getLogicalExpression();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOGICAL_EXPRESSION__EXP = eINSTANCE.getLogicalExpression_Exp();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.RelationalExpressionImpl <em>Relational Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.RelationalExpressionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getRelationalExpression()
     * @generated
     */
    EClass RELATIONAL_EXPRESSION = eINSTANCE.getRelationalExpression();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONAL_EXPRESSION__EXP = eINSTANCE.getRelationalExpression_Exp();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONAL_EXPRESSION__OP = eINSTANCE.getRelationalExpression_Op();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.AdditiveExpressionImpl <em>Additive Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.AdditiveExpressionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getAdditiveExpression()
     * @generated
     */
    EClass ADDITIVE_EXPRESSION = eINSTANCE.getAdditiveExpression();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADDITIVE_EXPRESSION__EXP = eINSTANCE.getAdditiveExpression_Exp();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADDITIVE_EXPRESSION__OP = eINSTANCE.getAdditiveExpression_Op();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.MultiplicativeExpressionImpl <em>Multiplicative Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.MultiplicativeExpressionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getMultiplicativeExpression()
     * @generated
     */
    EClass MULTIPLICATIVE_EXPRESSION = eINSTANCE.getMultiplicativeExpression();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLICATIVE_EXPRESSION__EXP = eINSTANCE.getMultiplicativeExpression_Exp();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLICATIVE_EXPRESSION__OP = eINSTANCE.getMultiplicativeExpression_Op();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.UnaryExpressionImpl <em>Unary Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.UnaryExpressionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getUnaryExpression()
     * @generated
     */
    EClass UNARY_EXPRESSION = eINSTANCE.getUnaryExpression();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNARY_EXPRESSION__OP = eINSTANCE.getUnaryExpression_Op();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNARY_EXPRESSION__EXP = eINSTANCE.getUnaryExpression_Exp();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.PostfixExpressionImpl <em>Postfix Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.PostfixExpressionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getPostfixExpression()
     * @generated
     */
    EClass POSTFIX_EXPRESSION = eINSTANCE.getPostfixExpression();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.PrimaryExpressionImpl <em>Primary Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.PrimaryExpressionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getPrimaryExpression()
     * @generated
     */
    EClass PRIMARY_EXPRESSION = eINSTANCE.getPrimaryExpression();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_EXPRESSION__OP = eINSTANCE.getPrimaryExpression_Op();

    /**
     * The meta object literal for the '<em><b>Features</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_EXPRESSION__FEATURES = eINSTANCE.getPrimaryExpression_Features();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.IfExpressionImpl <em>If Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.IfExpressionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getIfExpression()
     * @generated
     */
    EClass IF_EXPRESSION = eINSTANCE.getIfExpression();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXPRESSION__EXP = eINSTANCE.getIfExpression_Exp();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.FeatureCallParametersImpl <em>Feature Call Parameters</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.FeatureCallParametersImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getFeatureCallParameters()
     * @generated
     */
    EClass FEATURE_CALL_PARAMETERS = eINSTANCE.getFeatureCallParameters();

    /**
     * The meta object literal for the '<em><b>Decs</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FEATURE_CALL_PARAMETERS__DECS = eINSTANCE.getFeatureCallParameters_Decs();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FEATURE_CALL_PARAMETERS__PARAMS = eINSTANCE.getFeatureCallParameters_Params();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.LiteralImpl <em>Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.LiteralImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getLiteral()
     * @generated
     */
    EClass LITERAL = eINSTANCE.getLiteral();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LITERAL__NAME = eINSTANCE.getLiteral_Name();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.EnumerationTypeImpl <em>Enumeration Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.EnumerationTypeImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getEnumerationType()
     * @generated
     */
    EClass ENUMERATION_TYPE = eINSTANCE.getEnumerationType();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENUMERATION_TYPE__LEFT = eINSTANCE.getEnumerationType_Left();

    /**
     * The meta object literal for the '<em><b>Rights</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENUMERATION_TYPE__RIGHTS = eINSTANCE.getEnumerationType_Rights();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.SimpleTypeSpecifierImpl <em>Simple Type Specifier</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.SimpleTypeSpecifierImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getSimpleTypeSpecifier()
     * @generated
     */
    EClass SIMPLE_TYPE_SPECIFIER = eINSTANCE.getSimpleTypeSpecifier();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.LiteralCollectionImpl <em>Literal Collection</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.LiteralCollectionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getLiteralCollection()
     * @generated
     */
    EClass LITERAL_COLLECTION = eINSTANCE.getLiteralCollection();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LITERAL_COLLECTION__NAME = eINSTANCE.getLiteralCollection_Name();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LITERAL_COLLECTION__EXP = eINSTANCE.getLiteralCollection_Exp();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.ExpressionListOrRangeImpl <em>Expression List Or Range</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.ExpressionListOrRangeImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getExpressionListOrRange()
     * @generated
     */
    EClass EXPRESSION_LIST_OR_RANGE = eINSTANCE.getExpressionListOrRange();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_LIST_OR_RANGE__EXP = eINSTANCE.getExpressionListOrRange_Exp();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.FeatureCallImpl <em>Feature Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.FeatureCallImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getFeatureCall()
     * @generated
     */
    EClass FEATURE_CALL = eINSTANCE.getFeatureCall();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.QualifiersImpl <em>Qualifiers</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.QualifiersImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getQualifiers()
     * @generated
     */
    EClass QUALIFIERS = eINSTANCE.getQualifiers();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.DeclaratorImpl <em>Declarator</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.DeclaratorImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getDeclarator()
     * @generated
     */
    EClass DECLARATOR = eINSTANCE.getDeclarator();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATOR__NAME = eINSTANCE.getDeclarator_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATOR__TYPE = eINSTANCE.getDeclarator_Type();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.PathTypeNameImpl <em>Path Type Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.PathTypeNameImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getPathTypeName()
     * @generated
     */
    EClass PATH_TYPE_NAME = eINSTANCE.getPathTypeName();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATH_TYPE_NAME__LEFT = eINSTANCE.getPathTypeName_Left();

    /**
     * The meta object literal for the '<em><b>Rights</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATH_TYPE_NAME__RIGHTS = eINSTANCE.getPathTypeName_Rights();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.PathNameImpl <em>Path Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.PathNameImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getPathName()
     * @generated
     */
    EClass PATH_NAME = eINSTANCE.getPathName();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATH_NAME__PARAMS = eINSTANCE.getPathName_Params();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATH_NAME__LEFT = eINSTANCE.getPathName_Left();

    /**
     * The meta object literal for the '<em><b>Rights</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATH_NAME__RIGHTS = eINSTANCE.getPathName_Rights();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.TimeExpressionImpl <em>Time Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.TimeExpressionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getTimeExpression()
     * @generated
     */
    EClass TIME_EXPRESSION = eINSTANCE.getTimeExpression();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TIME_EXPRESSION__NAME = eINSTANCE.getTimeExpression_Name();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.ActualParameterListImpl <em>Actual Parameter List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.ActualParameterListImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getActualParameterList()
     * @generated
     */
    EClass ACTUAL_PARAMETER_LIST = eINSTANCE.getActualParameterList();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ACTUAL_PARAMETER_LIST__EXP = eINSTANCE.getActualParameterList_Exp();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.TypeNameImpl <em>Type Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.TypeNameImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getTypeName()
     * @generated
     */
    EClass TYPE_NAME = eINSTANCE.getTypeName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_NAME__NAME = eINSTANCE.getTypeName_Name();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.NameImpl <em>Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.NameImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getName_()
     * @generated
     */
    EClass NAME = eINSTANCE.getName_();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NAME__NAME = eINSTANCE.getName_Name();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.AttributeImpl <em>Attribute</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.AttributeImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getAttribute()
     * @generated
     */
    EClass ATTRIBUTE = eINSTANCE.getAttribute();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.FunctionImpl <em>Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.FunctionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getFunction()
     * @generated
     */
    EClass FUNCTION = eINSTANCE.getFunction();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.NoParamFunctionImpl <em>No Param Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.NoParamFunctionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getNoParamFunction()
     * @generated
     */
    EClass NO_PARAM_FUNCTION = eINSTANCE.getNoParamFunction();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.OneTypeParamFunctionImpl <em>One Type Param Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.OneTypeParamFunctionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getOneTypeParamFunction()
     * @generated
     */
    EClass ONE_TYPE_PARAM_FUNCTION = eINSTANCE.getOneTypeParamFunction();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.OneStringParamFunctionImpl <em>One String Param Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.OneStringParamFunctionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getOneStringParamFunction()
     * @generated
     */
    EClass ONE_STRING_PARAM_FUNCTION = eINSTANCE.getOneStringParamFunction();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.TwoStringParamFunctionImpl <em>Two String Param Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.TwoStringParamFunctionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getTwoStringParamFunction()
     * @generated
     */
    EClass TWO_STRING_PARAM_FUNCTION = eINSTANCE.getTwoStringParamFunction();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.OneIntegerParamFunctionImpl <em>One Integer Param Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.OneIntegerParamFunctionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getOneIntegerParamFunction()
     * @generated
     */
    EClass ONE_INTEGER_PARAM_FUNCTION = eINSTANCE.getOneIntegerParamFunction();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.TwoIntegerParamFunctionImpl <em>Two Integer Param Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.TwoIntegerParamFunctionImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getTwoIntegerParamFunction()
     * @generated
     */
    EClass TWO_INTEGER_PARAM_FUNCTION = eINSTANCE.getTwoIntegerParamFunction();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.CollectionKindImpl <em>Collection Kind</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.CollectionKindImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getCollectionKind()
     * @generated
     */
    EClass COLLECTION_KIND = eINSTANCE.getCollectionKind();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLLECTION_KIND__NAME = eINSTANCE.getCollectionKind_Name();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.NavigationOperatorImpl <em>Navigation Operator</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.NavigationOperatorImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getNavigationOperator()
     * @generated
     */
    EClass NAVIGATION_OPERATOR = eINSTANCE.getNavigationOperator();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NAVIGATION_OPERATOR__NAME = eINSTANCE.getNavigationOperator_Name();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.UnaryOperatorImpl <em>Unary Operator</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.UnaryOperatorImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getUnaryOperator()
     * @generated
     */
    EClass UNARY_OPERATOR = eINSTANCE.getUnaryOperator();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNARY_OPERATOR__NAME = eINSTANCE.getUnaryOperator_Name();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.MultiplyOperatorImpl <em>Multiply Operator</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.MultiplyOperatorImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getMultiplyOperator()
     * @generated
     */
    EClass MULTIPLY_OPERATOR = eINSTANCE.getMultiplyOperator();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULTIPLY_OPERATOR__NAME = eINSTANCE.getMultiplyOperator_Name();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.AddOperatorImpl <em>Add Operator</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.AddOperatorImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getAddOperator()
     * @generated
     */
    EClass ADD_OPERATOR = eINSTANCE.getAddOperator();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ADD_OPERATOR__NAME = eINSTANCE.getAddOperator_Name();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.RelationalOperatorImpl <em>Relational Operator</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.RelationalOperatorImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getRelationalOperator()
     * @generated
     */
    EClass RELATIONAL_OPERATOR = eINSTANCE.getRelationalOperator();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RELATIONAL_OPERATOR__NAME = eINSTANCE.getRelationalOperator_Name();

    /**
     * The meta object literal for the '{@link org.xtext.ocl.ocl.impl.LogicalOperatorImpl <em>Logical Operator</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.ocl.ocl.impl.LogicalOperatorImpl
     * @see org.xtext.ocl.ocl.impl.OclPackageImpl#getLogicalOperator()
     * @generated
     */
    EClass LOGICAL_OPERATOR = eINSTANCE.getLogicalOperator();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOGICAL_OPERATOR__NAME = eINSTANCE.getLogicalOperator_Name();

  }

} //OclPackage
